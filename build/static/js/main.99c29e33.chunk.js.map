{"version":3,"sources":["components/menu.jsx","components/single.jsx","components/input.jsx","components/all.jsx","components/search.jsx","App.js","serviceWorker.js","index.js"],"names":["Component","Single","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rmRecipe","bind","assertThisInitialized","state","data","id","refresh","window","confirm","Axios","get","concat","then","response","console","log","_this2","react_default","a","createElement","Paper_default","className","style","padding","Grid_default","container","align","item","xs","dishName","editable","Button_default","onClick","editView","_id","deletable","sm","ingredients","map","ingredient","index","key","ingAmount","ingUnit","ingName","instructions","imageUrl","lib_default","width","height","src","alt","Input","handleIns","handleIng","addIngredient","rmIngredient","sendIt","sendImg","rmImg","event","name","target","value","setState","defineProperty","newArr","toConsumableArray","change","assign","val","toLowerCase","property","replace","splice","Date","now","post","view","e","_this3","preventDefault","file","files","fd","FormData","append","_this4","_this5","loadDish","edit","TextField_default","fullWidth","type","onChange","placeholder","ing","spacing","multiline","rows","col","position","top","zIndex","containerElement","label","updateDish","All","resetView","singleRecipe","haveData","length","input","direction","md","List_default","ListItem_default","button","single","Search","searchQuery","hangleChange","handleChange","query","searchResults","App","toggleDrawer","open","right","switchView","justify","Menu_default","Drawer_default","anchor","onClose","href","search","components_all","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99c29e33.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nclass Menu extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {};\n  }\n\n  render(){\n    return (\n      <Grid align=\"right\" item xs={12}>\n        <Button onClick={this.props.toggleDrawer('right', true)}>Menu<MenuIcon/></Button>\n        <Drawer anchor=\"right\" open={this.state.right} onClose={this.props.toggleDrawer(false)}>\n          <h2 style={{padding: 15}} >Holcombe Family Recipes</h2>\n          <List>\n            <ListItem button onClick={this.props.switchView(0)}>New Recipe</ListItem>\n            <ListItem button onClick={this.props.switchView(1)}>Search Recipes</ListItem>\n            <ListItem button onClick={this.props.switchView(2)}>View All Recipes</ListItem>\n          </List>\n        </Drawer>\n      </Grid>\n    );\n  }\n\n\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Image from 'material-ui-image'\nimport Axios from 'axios';\n\nclass Single extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.rmRecipe = this.rmRecipe.bind(this);\n\n    this.state = {data:this.props.data};\n  }\n\n  rmRecipe(id,refresh) {\n    var twoStep = window.confirm('Are you sure you want to delete this? Cant be undone.');\n\n    if(twoStep){\n        Axios.get(`http://13.57.244.99:3000/delete/${id}`)\n        .then(response =>\n          // set the state to the API response\n          console.log(response)\n        );\n     };\n    if(refresh){refresh();};\n  }\n\n  render(){\n    return (\n      <Paper className=\"single-recipe\" style={{padding: 15}}>\n        <Grid container>\n          <Grid align=\"center\" item xs={10}>\n            <h2>{this.props.data.dishName}</h2>\n          </Grid>\n          <Grid item xs={1} align=\"flex-end\">\n            {this.props.editable ?\n              <Button onClick={ () => this.props.editView(this.props.data._id)}>Edit</Button>\n              : null\n            }\n            </Grid>\n            <Grid item xs={1} align=\"flex-end\">\n            {this.props.deletable ?\n              <Button onClick={ () => this.rmRecipe(this.props.data._id,this.props.refresh)}>x</Button>\n              : null\n            }\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <ul>\n              {this.props.data.ingredients.map((ingredient,index) => (\n                <li key={index}>{ingredient.ingAmount}<sub>{ingredient.ingUnit}</sub> {ingredient.ingName} </li>\n              ))}\n            </ul>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <p>{this.props.data.instructions}</p>\n          </Grid>\n\n\n          <Grid item xs={12}>\n            {this.props.data.imageUrl ? <Image width=\"100%\" height='auto' src={this.props.data.imageUrl} alt={this.props.data.dishName}/> : null}\n          </Grid>\n\n        </Grid>\n      </Paper>\n    );\n  }\n\n\n}\n\nexport default Single;\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Image from 'material-ui-image'\nimport Axios from 'axios';\n\nclass Input extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleIns = this.handleIns.bind(this);\n    this.handleIng = this.handleIng.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n    this.rmIngredient = this.rmIngredient.bind(this);\n    this.sendIt = this.sendIt.bind(this);\n    this.sendImg = this.sendImg.bind(this);\n    this.rmImg = this.rmImg.bind(this);\n\n    this.state = {\n      ingredients: [\n        {\n          ingAmount: 0,\n          ingUnit: '',\n          ingName: ''\n        }\n      ],\n      instructions:\"\",\n      dishName:\"\",\n      imageUrl: \"\"\n    };\n\n  }\n\n  // generic event handler for instructions\n  handleIns(event) {\n    const name = event.target.name\n    const value = event.target.value\n    this.setState({ [name]: value })\n  }\n\n  // advanced handler for ingredients (update array of objects)\n  handleIng(event, index) {\n    // copy array from state\n    let newArr = [...this.state.ingredients]\n    // copy specific object from array in state\n    let change = Object.assign({}, this.state.ingredients[index])\n    // convert UTM string to lowercase for use in URL\n    let val = event.target.value.toLowerCase();\n    // loop through coppied object and change updated property\n    for(var property in change) {\n      if(property === event.target.name)\n      if(event.target.name === 'content_utm'){\n        const replace = val.replace(' ', '_');\n        change[event.target.name] = replace\n      }\n      else{\n          change[event.target.name] = event.target.value\n      }\n    }\n    // cut out the outdated object and inject the updated one from the copied array\n    newArr.splice(index, 1, change);\n    // rewrite the updated array to state\n    this.setState({ ingredients: newArr });\n  }\n\n  addIngredient() {\n    const newArr = [...this.state.ingredients, {ingAmount: 0, ingUnit: '', ingName: '', _id: Date.now()}]\n    this.setState({ingredients: newArr})\n  }\n\n  rmIngredient(index) {\n    const newArr = [...this.state.ingredients]\n    console.log(index);\n    newArr.splice(index, 1);\n    this.setState({ingredients: newArr})\n  }\n\n  sendIt() {\n    Axios.post('http://13.57.244.99:3000/new', this.state ).then(()=>{\n    this.setState({\n      ingredients: [\n        {\n          ingAmount: 0,\n          ingUnit: '',\n          ingName: ''\n        }\n      ],\n      instructions:\"\",\n      dishName:\"\",\n      imageUrl: \"\"\n    });\n  });\n  }\n\n  updateDish(id,view) {\n    Axios.post(`http://13.57.244.99:3000/update/${id}`, this.state ).then(() =>\n      view()\n  );\n  }\n\n  sendImg(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    const fd = new FormData();\n    fd.append('image',file, file.name)\n    console.log(fd);\n    Axios.post(`http://13.57.244.99:3000/image-upload/`, fd).then((response) =>{\n        this.setState({imageUrl: response.data.imageUrl})\n    });\n  }\n\n  rmImg(){\n    this.setState({imageUrl:\"\"})\n  }\n\n  loadDish(id) {\n    Axios.post(`http://13.57.244.99:3000/loadDish/${id}`)\n    .then(response =>\n      // set the state to the API response\n      this.setState(response.data[0])\n    );\n  }\n\n  render(){\n    return (\n      <Grid container className=\"new\">\n      {!this.state._id ? this.loadDish(this.props.edit) : null}\n      <Grid item xs={12}>\n      <h1>{this.props.edit ? \"Edit\" : \"Input new\"} recipe</h1>\n\n      <TextField fullWidth type=\"text\" onChange={(e) => this.handleIns(e)} value={this.state.dishName} name=\"dishName\" placeholder=\"Name Dish\"></TextField>\n      </Grid>\n\n        {this.state.ingredients.map((ing,index) => (\n          <Grid container spacing={8} xs={12} key={ing._id}>\n          <Grid item xs={2}>\n            <TextField fullWidth type=\"number\" name={\"ingAmount\"} placeholder=\"Ingredient Amount\" onChange={(e) => this.handleIng(e, index)} value={this.state.ingredients[index].ingAmount}></TextField>\n          </Grid>\n          <Grid item xs={2}>\n            <TextField fullWidth type=\"text\" name={\"ingUnit\"} placeholder=\"Amount Unit\" onChange={(e) => this.handleIng(e, index)} value={this.state.ingredients[index].ingUnit}></TextField>\n          </Grid>\n          <Grid item xs={7}>\n            <TextField fullWidth type=\"text\" name={\"ingName\"} placeholder=\"Ingredient Name\" onChange={(e) => this.handleIng(e, index)} value={this.state.ingredients[index].ingName}></TextField>\n          </Grid>\n          <Grid item align=\"right\" xs={1}>\n            <Button onClick={()=> this.rmIngredient(index)}>x</Button>\n          </Grid>\n\n\n          </Grid>\n        ))}\n      <Button onClick={this.addIngredient}>Add Ingredient Row</Button>\n      <TextField multiline fullWidth name=\"instructions\" onChange={this.handleIns} rows=\"5\" col=\"160\" placeholder=\"Enter instructions on how to prepare this meal\" value={this.state.instructions}></TextField>\n      {\n        this.state.imageUrl\n        ?\n        <Grid item xs={4}>\n        <Button onClick={() => this.rmImg()} style={{position: 'relative', top: 35, zIndex: 1}}>X</Button>\n        <Image style={{width: '100%', height: 'auto'}} src={this.state.imageUrl} />\n        </Grid>\n        :\n        <Button containerElement='label' label='My Label'>\n           <input type=\"file\" onChange={this.sendImg} />\n        </Button>\n      }\n      <Button onClick={this.props.edit ? () => this.updateDish(this.props.edit,this.props.view) : this.sendIt}>Save</Button>\n\n\n      </Grid>\n    );\n  }\n\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Single from './single';\nimport Input from './input';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\n\nclass All extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.refresh = this.refresh.bind(this);\n    this.editView = this.editView.bind(this);\n    this.resetView = this.resetView.bind(this);\n    this.singleRecipe = this.singleRecipe.bind(this);\n\n    this.state = {\n      data:[],\n      singleRecipe: {},\n      edit:{\n        view:false,\n        id:\"\"\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    const newState = Axios.get('http://13.57.244.99:3000/all')\n      .then(response =>\n        // set the state to the API response\n        this.setState({data:response.data})\n      );\n  }\n\n  resetView(){\n    this.setState({edit:{view:false}})\n    this.refresh()\n  }\n\n\n\n  editView(id){\n    this.setState({edit:{view:true,id:id}});\n  }\n\n  singleRecipe(id) {\n    console.log(id)\n    const newState = Axios.post(`http://13.57.244.99:3000/single/${id}`)\n      .then(response =>\n        // set the state to the API response\n        // var mergedObj = Object.assign{this.state, response.data};\n        this.setState({ singleRecipe: response.data })\n      );\n  }\n\n  render(){\n    const haveData = this.state.singleRecipe.length\n\n    return (\n      <Grid container className=\"all\">\n          {this.state.edit.view ?\n             <Grid item xs={12}>\n              <Input edit={this.state.edit.id} view={this.resetView} />\n             </Grid>\n             :\n             <Grid direction=\"row\" container md={12} spacing={24}>\n             <Grid item xs={12}>\n               <h1>All Recipes</h1>\n             </Grid>\n               <Grid item md={4} sm={12}>\n                  <List>\n                  {this.state.data.map((item,index) => (\n                    <ListItem button key={item._id} onClick={() => this.singleRecipe(item._id)}>{item.dishName}</ListItem>\n                     ))}\n                  </List>\n               </Grid>\n               <Grid item md={8}>\n               {haveData ? <Single editable deletable editView={this.editView} data={this.state.singleRecipe[0]} refresh={this.refresh} /> : null}\n               </Grid>\n             </Grid>\n           }\n         </Grid>\n    );\n  }\n\n}\n\nexport default All;\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Single  from './single';\nimport Axios from 'axios';\n\nclass Search extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.searchQuery = this.searchQuery.bind(this);\n    this.singleRecipe = this.singleRecipe.bind(this);\n    this.hangleChange = this.handleChange.bind(this);\n\n    this.state = {\n      query: '',\n      searchResults: [],\n      singleRecipe:{}\n    };\n  }\n\n  // generic event handler for instructions\n  handleChange(event) {\n    const name = event.target.name\n    const value = event.target.value\n    this.setState({ [name]: value })\n  }\n\n  searchQuery(query) {\n    const newState = Axios.post(`http://localhost:3000/search/${query}`)\n      .then(response =>\n        // set the state to the API response\n        // var mergedObj = Object.assign{this.state, response.data};\n        this.setState({ searchResults: response.data })\n      );\n  }\n\n  singleRecipe(id) {\n    console.log(id)\n    const newState = Axios.post(`http://localhost:3000/single/${id}`)\n      .then(response =>\n        // set the state to the API response\n        // var mergedObj = Object.assign{this.state, response.data};\n        this.setState({ singleRecipe: response.data })\n      );\n  }\n\n\n  render(){\n    const haveData = this.state.singleRecipe.length\n\n    return (\n      <div className=\"All\">\n        <h1>Search</h1>\n        <TextField type=\"text\" name=\"query\" placeholder='seperate ingredients by coma' onChange={(e) => this.handleChange(e)} value={this.state.query}/>\n        <Button onClick={()=>this.searchQuery(this.state.query)}>Yeet!</Button>\n\n        <Grid container spacing={24} direction=\"row\">\n          <Grid item md={4} xs={12}>\n            <List>\n              {this.state.searchResults.map((item, index) => (\n                <ListItem button key={index} onClick={() => this.singleRecipe(item._id)}>{item.dishName}</ListItem>\n              ))}\n            </List>\n          </Grid>\n          <Grid item md={8}>\n            {haveData ? <Single data={this.state.singleRecipe[0]} /> : null}\n          </Grid>\n        </Grid>\n\n      </div>\n    );\n  }\n\n\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Menu  from './components/menu';\nimport All  from './components/all';\nimport Input  from './components/input';\nimport Search  from './components/search';\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      name: '',\n      view:3,\n      right: false};\n  }\n\n  toggleDrawer = (open) => () => {\n    this.setState({\n      right: open\n    });\n  };\n\n  switchView = (id) => () => {\n    this.setState({\n      view: id,\n      right: false\n    });\n  };\n\n  render(){\n\n    return (\n      <Grid container justify=\"center\" className=\"App\">\n        <Grid align=\"right\" item xs={12}>\n          <Button onClick={this.toggleDrawer('right', true)}>Menu<MenuIcon/></Button>\n          <Drawer anchor=\"right\" open={this.state.right} onClose={this.toggleDrawer(false)}>\n            <h2 style={{padding: 15}} onClick={() => this.setState({view: 3, right: false})}>Family Recipes</h2>\n            <List>\n              <ListItem button onClick={this.switchView(0)}>New Recipe</ListItem>\n              <ListItem button onClick={this.switchView(1)}>Search Recipes</ListItem>\n              <ListItem button onClick={this.switchView(2)}>View All Recipes</ListItem>\n            </List>\n            <List>\n                <a href=\"/logout\" ><ListItem >Logout</ListItem></a>\n            </List>\n          </Drawer>\n        </Grid>\n\n        <Grid item align=\"left\" xs={10} style={{padding: 15}}>\n\n          {this.state.view === 0 ? <Input /> : null}\n          {this.state.view === 1 ? <Search /> : null}\n          {this.state.view === 2 ? <All /> : null}\n          {this.state.view === 3 ? <div><h1>Family Recipes</h1> <h3>a full stack MERN project</h3></div> : null}\n\n\n        </Grid>\n      </Grid>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}